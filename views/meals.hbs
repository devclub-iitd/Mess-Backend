{{> base_start}}
{{> protected}}

<h1>Meals Management</h1>
<button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#createMealModal">Create Meal</button>
<button class="btn btn-primary" id="getMeals">Get Meals</button>
<h4>Current Meals</h4>
<div class="container my-4" id="current_meals"></div>
<h4>Future Meals</h4>
<div class="container my-4" id="future_meals"></div>
<h4>Past Meals</h4>
<div class="container my-4" id="past_meals"></div>
<div class="modal" tabindex="-1" id="createMealModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create Meal</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="form">
                    <div class="input-group mb-3">
                        <span class="input-group-text">Name</span>
                        <input type="text" id="create_name" class="form-control" placeholder="Meal"
                            aria-label="StartTime">
                    </div>
                    <div class="input-group mb-3">
                        <span class="input-group-text">Start Time</span>
                        <input type="datetime-local" step="300" id="create_start" class="form-control"
                            aria-label="StartTime">
                    </div>
                    <div class="input-group mb-3">
                        <span class="input-group-text">End Time</span>
                        <input type="datetime-local" step="300" id="create_end" class="form-control"
                            aria-label="EndTime">
                    </div>
                    <div class="input-group mb-3">
                        <span class="input-group-text">Capacity</span>
                        <input type="number" value='1000' id="create_capacity" class="form-control"
                            aria-label="Capacity">
                    </div>
                    <div class="input-group mb-3">
                        <span class="input-group-text">Price</span>
                        <input type="number" value='0' id="create_price" class="form-control" aria-label="Price">
                    </div>
                    {{!-- <div class="input-group mb-3">
                        <span class="input-group-text">Mess</span>
                        <select class="form-control" id="create_mess" aria-label="Mess">
                            <option selected value="UDAIGIRI">UDAIGIRI</option>
                            <option value="Others">Others</option>
                        </select>
                    </div> --}}
                    <div class="input-group mb-3">
                        <input type="checkbox" checked id="create_all" name="all" value="Auto" class="form-check-input"
                            aria-label="auto">
                        Auto-Assign to All Active Users in {{user.messNames.[0]}}?
                    </div>
                    <div id="createError"></div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="createMeal">Create</button>
            </div>
        </div>
    </div>
</div>
<script>
    const messName = document.querySelector("div#messName").innerText.trim();
    function templateMealCard(meal) {
        const start = (new Date(meal.start_time)).toLocaleString();
        const end = (new Date(meal.end_time)).toLocaleString();
        return `<div class='row bg-light m-2' id='meal_${meal._id}'>
            <div class='col'>${meal.name}</div>
            <div class='col'>${meal.mess}</div>
            <div class='col'>Start: ${start}</div>
            <div class='col'>End: ${end}</div>
            <div class='col'>Capacity: ${meal.capacity}</div>
            <div class='col'>Price: ${meal.price}</div> 
        </div>`;
    }

    function getMeals() {
        document.querySelector('div#current_meals').innerHTML = "<div class='spinner-border' role='status'>";
        document.querySelector('div#future_meals').innerHTML = "<div class='spinner-border' role='status'>";
        document.querySelector('div#past_meals').innerHTML = "<div class='spinner-border' role='status'>";
        const d = (new Date()).toString();
        fetch("/api/manager/getMeals?limit=0&messName="+messName, { credentials: "include" }
        ).then(response => response.json()
        ).then(data => document.querySelector('div#current_meals').innerHTML = data.map(
            m => templateMealCard(m)).join(''));
        fetch("/api/manager/getMeals?limit=10&messName="+messName, { credentials: "include" }
        ).then(response => response.json()
        ).then(data => document.querySelector('div#future_meals').innerHTML = data.map(
            m => templateMealCard(m)).join(''));
        fetch("/api/manager/getMeals?limit=-10&messName="+messName, { credentials: "include" }
        ).then(response => response.json()
        ).then(data => document.querySelector('div#past_meals').innerHTML = data.map(
            m => templateMealCard(m)).join(''));
    }
    document.querySelector('button#getMeals').addEventListener('click', getMeals);


    function createMeal() {
        const n = document.querySelector('input#create_name').value;
        const s = new Date(document.querySelector('input#create_start').value).toISOString();
        const e = new Date(document.querySelector('input#create_end').value).toISOString();
        const c = document.querySelector('input#create_capacity').value;
        const p = document.querySelector('input#create_price').value;
        // const m = document.querySelector('select#create_mess').value;
        const a = document.querySelector('input#create_all').checked;
        fetch("/api/manager/createMeal", {
            method: 'POST',
            credentials: "include",
            body: JSON.stringify({ name: n, start_time: s, end_time: e, capacity: c, price: p, messName: messName }),
            headers: {
                'Content-Type': 'application/json'
            }
        }).then(async response => {
            if (response.status === 201) {
                document.querySelector('div#createError').innerText = "Meal Successfully Created!";
                if (a) {
                    const id = (await response.json())['_id'];
                    document.querySelector('div#createError').innerHTML += '<br>Assigning all';
                    fetch("/api/manager/bulkCreateMealToken", {
                        method: 'POST',
                        credentials: "include",
                        body: JSON.stringify({ meal_id: id }),
                        headers: { 'Content-Type': 'application/json' }
                    }).then(async res => {
                        if (res.status === 201) {
                            document.querySelector('div#createError').innerHTML += '<br> Assigned to all users!';
                        } else {
                            document.querySelector('div#createError').innerHTML += await res.text();
                        }
                    })
                }
            } else {
                document.querySelector('div#createError').innerText = await response.text();
            }
        });
    }
    document.querySelector('button#createMeal').addEventListener('click', createMeal);
    window.onload = getMeals;
</script>
{{> base_end}}